{"version":3,"sources":["webpack:///./src/templates/speciality/speciality.js","webpack:///./src/templates/speciality/specialityWrapper.js"],"names":["offset","Speciality","string","speciality","data","intl","useIntl","pageCount","Math","ceil","allDoctorListsCsv","nodes","length","useState","slice","doctorsList","setDoctorsList","Container","fluid","className","formatMessage","id","charAt","toUpperCase","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","subContainerClassName","activeClassName","React","memo","capitalizeFirstLetter","SpecialityWrapper","pageContext","reverse","toLowerCase","menuWithSynonyms","filter","item","join","top3","reduce","accumulator","currentValue","Name","locale","schema","map","doc","i","replace","fields","slug","Designation","Institute","contact1","title","description"],"mappings":"8OASIA,EAAS,EAMb,IAAMC,EAAa,SAAC,GAA0B,IAJfC,EAITC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,KAE1BC,EAAOC,oBACPC,EAAYC,KAAKC,KAAKL,EAAKM,kBAAkBC,MAAMC,OAV3C,GAYd,EAAsCC,mBACpCT,EAAKM,kBAAkBC,MAAMG,MAAMd,EAAQA,EAb/B,IAYPe,EAAP,KAAoBC,EAApB,KAUA,OACE,kBAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,OACzB,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,eACRd,EAAKe,cAAc,CACrBC,GAAI,QAFR,IAGQhB,EAAKe,cAAc,CACvBC,GAAG,IA3BcnB,EA2BYC,EA1BlCD,EAAOoB,OAAO,GAAGC,cAAgBrB,EAAOY,MAAM,MAsB7C,KAKST,EAAKe,cAAc,CAAEC,GAAI,gBAElC,yBAAKF,UAAU,YACf,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAASf,KAAMW,MAGnB,yBAAKI,UAAU,iCACb,kBAAC,IAAD,CACEK,cAAe,KACfC,UAAW,KACXC,WAAY,MACZC,eAAgB,WAChBpB,UAAWA,EACXqB,qBAAsB,EACtBC,mBAAoB,EACpBC,aA/BY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB/B,EAjBY,EAiBH+B,EAETf,EAAeZ,EAAKM,kBAAkBC,MAAMG,MAAMd,EAAQA,EAnB9C,KAgDJgC,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,eAQdC,MAAMC,KAAKnC,GCzD1B,SAASoC,EAAsBnC,GAC7B,OAAOA,EAAOoB,OAAO,GAAGC,cAAgBrB,EAAOY,MAAM,GAGhD,IAuBDwB,EAAoB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAanC,EAAW,EAAXA,KACxCA,EAAKM,kBAAkBC,MAAQ,IAASP,EAAKM,kBAAkBC,MAAM,CAAC,WAAW6B,UACjF,IAAMnC,EAAOC,oBACTH,EAAaoC,EAAYtC,WAAWwC,cACxCtC,EAAauC,mBACVC,QAAO,SAAAC,GAAI,OAAIA,EAAK,GAAGH,gBAAkBtC,KAAY,GACrD0C,KAAK,SAER,IAAIC,EAAO1C,EAAKM,kBAAkBC,MAC/BG,MAAM,EAAG,GACTiC,QACC,SAACC,EAAaC,GAAd,OAA+BD,GAAiBC,EAAaC,KAAnB,QAC1C,IAGJJ,EACkB,OAAhBzC,EAAK8C,OAAL,gBACoBL,EADpB,kCAEI,oEAEN,IAiBMM,EAAM,+FAjBOhD,EAAKM,kBAAkBC,MAAMG,MAAM,EAAG,GAAGuC,KAC1D,SAACC,EAAKC,GAAN,sDAEcA,EAAI,GAFlB,0DAKWD,EAAIJ,KAAKM,QAAQ,KAAM,KALlC,iDAMkDF,EAAIG,OAAOC,KAN7D,wBAOeJ,EAAIK,YAAYH,QAAQ,KAAM,KAP7C,yEAUaF,EAAIM,UAAUJ,QAAQ,KAAM,KAVzC,gCAYgBF,EAAIO,SAASL,QAAQ,KAAM,KAZ3C,oBAgBU,SAKZ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEJ,OAAQA,EACRU,MAAOzD,EAAKe,cAAc,CACxBC,GAAIgB,EAAsBlC,KAE5B4D,YAAa,CACX1D,EAAKe,cAAc,CACjBC,GAAI,QAENhB,EAAKe,cAAc,CACjBC,GAAIgB,EAAsBlC,KAE5BE,EAAKe,cAAc,CACjBC,GAAI,eAENyB,GACAD,KAAK,OAET,kBAAC,EAAD,CAAY1C,WAAYA,EAAYC,KAAMA,MAKjC+B,cAAMC,KAAKE","file":"component---src-templates-speciality-speciality-wrapper-js-dfdabe8a824f03436994.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { useIntl } from \"gatsby-plugin-intl\"\r\n//importing component\r\nimport Doctors from \"../../components/doctors/doctors\"\r\n\r\n// declaring some global variable\r\nconst perPage = 6\r\nlet offset = 0\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n\r\nconst Speciality = ({ speciality, data }) => {\r\n  // Making useIntl available in the code\r\n  const intl = useIntl()\r\n  const pageCount = Math.ceil(data.allDoctorListsCsv.nodes.length / perPage)\r\n  //const [currentPage, setCurrentPage] = useState(0)\r\n  const [doctorsList, setDoctorsList] = useState(\r\n    data.allDoctorListsCsv.nodes.slice(offset, offset + perPage)\r\n  )\r\n\r\n  const onHandleClick = ({ selected }) => {\r\n    offset = selected * perPage\r\n    //setCurrentPage(selected)\r\n    setDoctorsList(data.allDoctorListsCsv.nodes.slice(offset, offset + perPage))\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"p-0\">\r\n      <div className=\"main\">\r\n        <div className=\"med-section\">\r\n          <h3 className=\"text-center\">\r\n            {`${intl.formatMessage({\r\n              id: \"adl\",\r\n            })} ${intl.formatMessage({\r\n              id: `${capitalizeFirstLetter(speciality)}`,\r\n            })}  ${intl.formatMessage({ id: \"Speciality\" })}`}\r\n          </h3>\r\n          <div className=\"divider\"></div>\r\n          <div className=\"med-card\">\r\n            <Doctors data={doctorsList} />\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <ReactPaginate\r\n            previousLabel={\"<<\"}\r\n            nextLabel={\">>\"}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={onHandleClick}\r\n            containerClassName={\"pagination\"}\r\n            subContainerClassName={\"pages pagination\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default React.memo(Speciality)\r\n","import { graphql } from \"gatsby\"\r\nimport { useIntl } from \"gatsby-plugin-intl\"\r\nimport * as _ from 'lodash'\r\nimport React from \"react\"\r\nimport Layout from \"../../components/layout\"\r\nimport SEO from \"../../components/seo\"\r\nimport { menuWithSynonyms } from \"../../utils/meta.data\"\r\nimport Speciality from \"./speciality\"\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n\r\nexport const query = graphql`\r\n  query($Speciality: String!) {\r\n    allDoctorListsCsv(filter: { Speciality: { eq: $Speciality } }) {\r\n      nodes {\r\n        Degree\r\n        Name\r\n        Rating\r\n        Designation\r\n        Institute\r\n        contact1\r\n        loc1\r\n        visitTime1\r\n        id\r\n        uid\r\n\r\n        fields {\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst SpecialityWrapper = ({ pageContext, data }) => {\r\n  data.allDoctorListsCsv.nodes = _.sortBy(data.allDoctorListsCsv.nodes,[\"Rating\"]).reverse()\r\n  const intl = useIntl()\r\n  let speciality = pageContext.Speciality.toLowerCase()\r\n  speciality = menuWithSynonyms\r\n    .filter(item => item[0].toLowerCase() === speciality)[0]\r\n    .join(\" and \")\r\n\r\n  let top3 = data.allDoctorListsCsv.nodes\r\n    .slice(0, 3)\r\n    .reduce(\r\n      (accumulator, currentValue) => accumulator + `${currentValue.Name}; `,\r\n      \"\"\r\n    )\r\n  //, Contact: ${currentValue.contact1.replace(/\\*/g,\",\")}\r\n  top3 =\r\n    intl.locale === \"en\"\r\n      ? `Top Doctors: ${top3} at rajshahi city in bangladesh`\r\n      : \"- তাদের চেম্বারের লোকেশন, সময় ও সিরিয়লের নাম্বারসহ প্রয়োজনীয় তথ্য\"\r\n\r\n  const top3Schema = data.allDoctorListsCsv.nodes.slice(0, 3).map(\r\n    (doc, i) => `\r\n   {\"@type\": \"ListItem\",\r\n   \"position\": \"${i + 1}\",\r\n   \"item\": {\r\n    \"@type\": \"Person\",\r\n    \"name\": \"${doc.Name.replace(/\\*/, \",\")}\",\r\n    \"url\": \"${\"https://rajdoctors.com\" + `/doctor/` + doc.fields.slug}\",\r\n    \"jobTitle\": \"${doc.Designation.replace(/\\*/, \",\")}\",\r\n    \"worksFor\": {\r\n      \"@type\": \"Organization\",\r\n      \"name\": \"${doc.Institute.replace(/\\*/, \",\")}\"\r\n    },\r\n    \"telephone\": \"${doc.contact1.replace(/\\*/, \",\")}\" \r\n   }}\r\n   `\r\n  )\r\n  const schema = `{\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"ItemList\",\r\n    \"itemListElement\": [${top3Schema}]\r\n  }`\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        schema={schema}\r\n        title={intl.formatMessage({\r\n          id: capitalizeFirstLetter(speciality),\r\n        })}\r\n        description={[\r\n          intl.formatMessage({\r\n            id: \"adl\",\r\n          }),\r\n          intl.formatMessage({\r\n            id: capitalizeFirstLetter(speciality),\r\n          }),\r\n          intl.formatMessage({\r\n            id: \"Speciality\",\r\n          }),\r\n          top3,\r\n        ].join(\" \")}\r\n      />\r\n      <Speciality speciality={speciality} data={data} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default React.memo(SpecialityWrapper)\r\n"],"sourceRoot":""}