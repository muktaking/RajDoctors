{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Jumbotron.js","webpack:///./src/templates/doctor/doctor.js"],"names":["_excluded","Jumbotron","forwardRef","_ref","ref","_classes","_ref$as","as","Component","className","fluid","bsPrefix","props","classes","createElement","defaultProps","displayName","injectIntl","intl","pageContext","data","doc","uid","Name","Rating","Degree","Speciality","Designation","Institute","contact1","contact2","locDetail1","locDetail2","visitTime1","visitTime2","fields","Protocol","Fee","docs","nodes","filter","e","slice","schema","replace","slug","imgSrc","title","formatMessage","id","useDefault","description","height","width","img","Badge","variant","pill","style","maxWidth","split","map","contact","href","size","imgData","childImageSharp","index"],"mappings":"iMAEIA,EAAY,CAAC,KAAM,YAAa,QAAS,YAOzCC,EAAyB,IAAMC,YAAW,SAAUC,EAAMC,GAC5D,IAAIC,EAEAC,EAAUH,EAAKI,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCG,EAAYN,EAAKM,UACjBC,EAAQP,EAAKO,MACbC,EAAWR,EAAKQ,SAChBC,EAAQ,YAA8BT,EAAMH,GAG5Ca,IAAWR,EAAW,IAD1BM,EAAW,YAAmBA,EAAU,eACW,EAAMN,EAASM,EAAW,UAAYD,EAAOL,GAChG,OAAoB,IAAMS,cAAcN,EAAW,YAAS,CAC1DJ,IAAKA,GACJQ,EAAO,CACRH,UAAW,IAAWA,EAAWI,SAGrCZ,EAAUc,aArBS,CACjBL,OAAO,GAqBTT,EAAUe,YAAc,YACT,Q,qICkQAC,gCA9MA,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAgBP,EAAY,iBAKlD,EAiBIA,EAAMQ,KAAKC,IAhBbC,EADF,EACEA,IACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,OACAC,EALF,EAKEA,WACAC,EANF,EAMEA,YACAC,EAPF,EAOEA,UACAC,EARF,EAQEA,SACAC,EATF,EASEA,SACAC,EAVF,EAUEA,WACAC,EAXF,EAWEA,WACAC,EAZF,EAYEA,WACAC,EAbF,EAaEA,WACAC,EAdF,EAcEA,OACAC,EAfF,EAeEA,SACAC,EAhBF,EAgBEA,IAGIC,EAAQ1B,EAAMQ,KAAKkB,KAAKC,MAAMC,QAAO,SAAAC,GAAC,OAAEA,EAAEf,aAAcd,EAAMQ,KAAKC,IAAIK,cAAYgB,MAAM,EAAE,GAC3FC,EAAM,+EAIDpB,EAAKqB,QAAQ,KAAM,KAJlB,+CAKsCT,EAAOU,KAL7C,yCAM2B1B,EAAY2B,OANvC,sBAOGnB,EAAYiB,QAAQ,KAAM,KAP7B,mEAUChB,EAAUgB,QAAQ,KAAM,KAVzB,4BAaVf,EAASe,QAAQ,KAAM,KAAO,KAAOd,EAASc,QAAQ,KAAM,KAblD,WAiBZ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEG,MAAUxB,EAAKqB,QAAQ,KAAM,KAAxB,MAAkCjB,EAAYiB,QACjD,KACA,KAFG,IAGA1B,EAAK8B,cAAc,CACtBC,GAAI,OAJD,IAKCrB,EAAUgB,QAAQ,KAAM,KAC9BM,YAAY,EACZC,YAAW,IAAMzB,EAAWkB,QAAQ,KAAM,KAA/B,IAAuC1B,EAAK8B,cAAc,CACnEC,GAAI,eADK,KAEJ/B,EAAK8B,cAAc,CACxBC,GAAI,yBAHK,KAIJpB,EAASe,QAAQ,MAAO,KAJpB,MAKTd,EAAWA,EAASc,QAAQ,MAAO,KAAO,IALjC,KAMN1B,EAAK8B,cAAc,CACtBC,GAAI,qBAPK,KAQJlB,EAAWa,QAAQ,MAAO,KARtB,IAQ8B1B,EAAK8B,cAAc,CAC1DC,GAAI,iBATK,KAUJhB,EAAWW,QAAQ,MAAO,KAVtB,IAU8B1B,EAAK8B,cAAc,CAC1DC,GAAI,mCAENN,OAAQA,IAEV,kBAAC,EAAD,KACE,yBAAKlC,UAAU,kBACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAQ2C,OAAO,MAAMC,MAAM,MAAMC,IAAKhC,KAExC,4BACGC,EACD,kBAAC,IAAD,CAAMD,IAAKA,EAAKb,UAAU,MAE5B,2BACE,kBAAC8C,EAAA,EAAD,CAAOC,QAAQ,WAAW/B,EAAOmB,QAAQ,KAAM,MAC/C,kBAACW,EAAA,EAAD,CAAOE,MAAI,EAACD,QAAQ,OAAO/C,UAAU,eACnC,kBAAC,IAAD,MACA,0BAAMA,UAAU,QAAQe,GAAUA,MAMxC,yBAAKf,UAAU,yBACb,yBAAKA,UAAU,eACb,4BAAKS,EAAK8B,cAAc,CAAEC,GAAI,iBAC9B,uBAAGxC,UAAU,mBACPkB,EAAYiB,QAAQ,KAAM,KADhC,IACwC1B,EAAK8B,cAAc,CACvDC,GAAI,OAFR,IAGQrB,EAAUgB,QAAQ,KAAM,OAGlC,yBAAKnC,UAAU,WACb,4BAAKS,EAAK8B,cAAc,CAAEC,GAAI,QAC9B,yBAAKxC,UAAU,oDACb,yBACEA,UAAU,0BACViD,MAAO,CAAEC,SAAU,UAEnB,yBAAKlD,UAAU,eACZS,EAAK8B,cAAc,CAAEC,GAAI,iBAE5B,yBAAKxC,UAAU,aACb,wBAAIA,UAAU,cACXS,EAAK8B,cAAc,CAAEC,GAAI,0BAE5B,uBAAGxC,UAAU,aAEToB,EAAS+B,MAAM,KAAKC,KAAI,SAAAC,GAAO,OAAE,oCAC/B,uBAAGC,KAAM,OAASD,GAChB,kBAAC,IAAD,CAAeE,KAAK,WADtB,IACkCF,GAElC,kCAKN,wBAAIrD,UAAU,cACXS,EAAK8B,cAAc,CAAEC,GAAI,sBAE5B,uBAAGxC,UAAU,aAAasB,EAAWa,QAAQ,MAAO,MACpD,wBAAInC,UAAU,cACXS,EAAK8B,cAAc,CAAEC,GAAI,kBAE5B,uBAAGxC,UAAU,aAAawB,EAAWW,QAAQ,MAAO,MACpD,wBAAInC,UAAU,cAAd,oBAGE,2BACG2B,EAAWA,EAASQ,QAAQ,MAAO,KAAO,oDAE7C,wBAAInC,UAAU,cAAd,oBAGA,2BACG4B,EAAMA,EAAIO,QAAQ,MAAO,KAAO,sCAIxCZ,GACC,yBACEvB,UAAU,qBACViD,MAAO,CAAEC,SAAU,UAEnB,yBAAKlD,UAAU,eACZS,EAAK8B,cAAc,CAAEC,GAAI,iBAE5B,yBAAKxC,UAAU,aACb,wBAAIA,UAAU,cACXS,EAAK8B,cAAc,CAAEC,GAAI,0BAE5B,uBAAGxC,UAAU,aAEXqB,EAAS8B,MAAM,KAAKC,KAAI,SAAAC,GAAO,OAAE,oCAC/B,uBAAGC,KAAM,OAASD,GAChB,kBAAC,IAAD,CAAeE,KAAK,WADtB,IACkCF,GAElC,kCAKJ,wBAAIrD,UAAU,cACXS,EAAK8B,cAAc,CAAEC,GAAI,sBAE5B,uBAAGxC,UAAU,aACVuB,EAAWY,QAAQ,MAAO,MAE7B,wBAAInC,UAAU,cACXS,EAAK8B,cAAc,CAAEC,GAAI,kBAE5B,uBAAGxC,UAAU,aACVyB,EAAWU,QAAQ,MAAO,MAE7B,wBAAInC,UAAU,cAAd,oBAGA,2BACG2B,EAASQ,QAAQ,MAAO,WAQvC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAIG,MAAM,+BAA+Be,QAAQ,cAAcG,QAASrD,EAAMQ,KAAKkC,IAAIY,gBAAgBxD,QACvG,yBAAKD,UAAU,QACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,eAAe,wBAC7B,yBAAKA,UAAU,YACf,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAASW,KAAMkB,EAAM6B,OAAO","file":"component---src-templates-doctor-doctor-js-1b4abc7de7d55c004268.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"className\", \"fluid\", \"bsPrefix\"];\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Jumbotron = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _classes;\n\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'jumbotron');\n  var classes = (_classes = {}, _classes[bsPrefix] = true, _classes[bsPrefix + \"-fluid\"] = fluid, _classes);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nJumbotron.defaultProps = defaultProps;\nJumbotron.displayName = 'Jumbotron';\nexport default Jumbotron;","import { graphql } from \"gatsby\"\r\nimport { injectIntl } from \"gatsby-plugin-intl\"\r\nimport React from \"react\"\r\nimport { Badge, Jumbotron } from \"react-bootstrap\"\r\nimport { FaPhoneSquare, FaStar } from \"react-icons/fa\"\r\nimport Ad from \"../../components/ad\"\r\nimport Avatar from \"../../components/avatar\"\r\n//importing components\r\nimport Doctors from \"../../components/doctors/doctors\"\r\nimport Flag from \"../../components/flag\"\r\nimport Layout from \"../../components/layout\"\r\nimport SEO from \"../../components/seo\"\r\nimport Share from \"../../components/share\"\r\n\r\n\r\n//uid: { eq: $uid }, lang: { eq: $lang }\r\n//$uid: String!, $lang: String!\r\nexport const query = graphql`\r\n  query($uid: String!, $lang: String!) {\r\n    doc: doctorListsCsv(uid: { eq: $uid }, lang: { eq: $lang }) {\r\n      uid\r\n      Degree\r\n      Name\r\n      Rating\r\n      Designation\r\n      Institute\r\n      Speciality\r\n      contact1\r\n      contact2\r\n      loc1\r\n      loc2\r\n      locDetail1\r\n      locDetail2\r\n      visitTime1\r\n      visitTime2\r\n      fields {\r\n        slug\r\n      }\r\n      Protocol\r\n      Fee\r\n    }\r\n    docs: allDoctorListsCsv(sort: {fields: Rating, order: DESC}) {\r\n      nodes {\r\n        id\r\n        uid\r\n        Name\r\n        Rating\r\n        Degree\r\n        Speciality\r\n        contact1\r\n        loc1\r\n        visitTime1\r\n        fields {\r\n          slug\r\n        }\r\n        Protocol\r\n        lang\r\n      }\r\n    }\r\n\r\n    img: file(relativePath: { eq: \"pakhighorAd02.png\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 350, maxHeight: 210) {\r\n          # Choose either the fragment including a small base64ed image, a traced placeholder SVG, or one without.\r\n          ...GatsbyImageSharpFluid_noBase64\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n`\r\n// img: file(relativePath: { eq: \"pakhighorAd02.png\" }) {\r\n    //   childImageSharp {\r\n    //     # Specify the image processing specifications right in the query.\r\n    //     # Makes it trivial to update as your page's design changes.\r\n    //     fixed(width: 350, height: 210) {\r\n    //       ...GatsbyImageSharpFixed\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\nconst Doctor = ({ intl, pageContext, ...props }) => {\r\n  // Internationalization\r\n  //const intl = useIntl()\r\n  //const locale = intl.locale !== \"en\" ? `/${intl.locale}` : \"\"\r\n\r\n  const {\r\n    uid,\r\n    Name,\r\n    Rating,\r\n    Degree,\r\n    Speciality,\r\n    Designation,\r\n    Institute,\r\n    contact1,\r\n    contact2,\r\n    locDetail1,\r\n    locDetail2,\r\n    visitTime1,\r\n    visitTime2,\r\n    fields,\r\n    Protocol,\r\n    Fee\r\n  } = props.data.doc\r\n\r\n  const docs =  props.data.docs.nodes.filter(e=>e.Speciality ===props.data.doc.Speciality).slice(0,6)\r\n  const schema = `\r\n{\r\n  \"@context\": \"https://schema.org/\",\r\n  \"@type\": \"Person\",\r\n  \"name\": \"${Name.replace(/\\*/, \",\")}\",\r\n  \"url\": \"${\"https://rajdoctors.com\" + `/doctor/` + fields.slug}\",\r\n  \"image\": \"${\"https://rajdoctors.com\" + pageContext.imgSrc}\",\r\n  \"jobTitle\": \"${Designation.replace(/\\*/, \",\")}\",\r\n  \"worksFor\": {\r\n    \"@type\": \"Organization\",\r\n    \"name\": \"${Institute.replace(/\\*/, \",\")}\"\r\n  },\r\n  \"telephone\": \"${\r\n    contact1.replace(/\\*/, \",\") + \", \" + contact2.replace(/\\*/, \",\")\r\n  }\"  \r\n}\r\n`\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={`${Name.replace(/\\*/, \",\")} | ${Designation.replace(\r\n          /\\*/,\r\n          \",\"\r\n        )} ${intl.formatMessage({\r\n          id: \"at\",\r\n        })} ${Institute.replace(/\\*/, \",\")}`}\r\n        useDefault={false}\r\n        description={` ${Speciality.replace(/\\*/, \",\")} ${intl.formatMessage({\r\n          id: \"Specialist\",\r\n        })}. ${intl.formatMessage({\r\n          id: \"chamber.contact-info\",\r\n        })}: ${contact1.replace(/\\*/g, \",\")}, ${\r\n          contact2 ? contact2.replace(/\\*/g, \",\") : \"\"\r\n        }, ${intl.formatMessage({\r\n          id: \"chamber.location\",\r\n        })}: ${locDetail1.replace(/\\*/g, \",\")} ${intl.formatMessage({\r\n          id: \"chamber.time\",\r\n        })}: ${visitTime1.replace(/\\*/g, \",\")} ${intl.formatMessage({\r\n          id: \"at rajshahi city in bangladesh\",\r\n        })}`}\r\n        schema={schema}\r\n      />\r\n      <Jumbotron>\r\n        <div className=\"doctor-heading\">\r\n          <div className=\"avatar ml-5 mb-2\">\r\n            <Avatar height=\"200\" width=\"200\" img={uid} />\r\n          </div>\r\n          <h1>\r\n            {Name}\r\n            <Flag uid={uid} className=\"\" />\r\n          </h1>\r\n          <p>\r\n            <Badge variant=\"warning\">{Degree.replace(/\\*/, \",\")}</Badge>\r\n            <Badge pill variant=\"dark\" className=\"rating ml-3\">\r\n              <FaStar />\r\n              <span className=\"pl-2\">{Rating && Rating}</span>\r\n              \r\n            </Badge>\r\n            \r\n          </p>\r\n        </div>\r\n        <div className=\"doctor-body px-3 pt-1\">\r\n          <div className=\"designation\">\r\n            <h5>{intl.formatMessage({ id: \"designation\" })}</h5>\r\n            <p className=\"text-muted pl-3\">\r\n              {`${Designation.replace(/\\*/, \",\")} ${intl.formatMessage({\r\n                id: \"at\",\r\n              })} ${Institute.replace(/\\*/, \",\")}`}\r\n            </p>\r\n          </div>\r\n          <div className=\"chamber\">\r\n            <h5>{intl.formatMessage({ id: \"ci\" })}</h5>\r\n            <div className=\"pl-3 d-flex flex-wrap justify-content-start mt-2\">\r\n              <div\r\n                className=\"card bg-light mb-3 mr-3\"\r\n                style={{ maxWidth: \"22rem\" }}\r\n              >\r\n                <div className=\"card-header\">\r\n                  {intl.formatMessage({ id: \"chamber.one\" })}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    {intl.formatMessage({ id: \"chamber.contact-info\" })}\r\n                  </h5>\r\n                  <p className=\"card-text\">\r\n                    {\r\n                      contact1.split('*').map(contact=><>\r\n                        <a href={'tel:' + contact} >\r\n                          <FaPhoneSquare size='1.4rem'/> {contact}\r\n                        </a>\r\n                        <br />\r\n                        </>\r\n                      )\r\n                    }  \r\n                  </p>\r\n                  <h5 className=\"card-title\">\r\n                    {intl.formatMessage({ id: \"chamber.location\" })}\r\n                  </h5>\r\n                  <p className=\"card-text\">{locDetail1.replace(/\\*/g, \",\")}</p>\r\n                  <h5 className=\"card-title\">\r\n                    {intl.formatMessage({ id: \"chamber.time\" })}\r\n                  </h5>\r\n                  <p className=\"card-text\">{visitTime1.replace(/\\*/g, \",\")}</p>\r\n                  <h5 className=\"card-title\">\r\n                      Chamber Protocol\r\n                    </h5>\r\n                    <p>\r\n                      {Protocol ? Protocol.replace(/\\*/g, ',') : \"Please phone to provided number to book a serial\"}\r\n                    </p>\r\n                    <h5 className=\"card-title\">\r\n                      Consultation Fee\r\n                    </h5>\r\n                    <p>\r\n                      {Fee ? Fee.replace(/\\*/g, ',') : \"Please phone to provided number.\"}\r\n                    </p>\r\n                </div>\r\n              </div>\r\n              {locDetail2 && (\r\n                <div\r\n                  className=\"card bg-light mb-3\"\r\n                  style={{ maxWidth: \"22rem\" }}\r\n                >\r\n                  <div className=\"card-header\">\r\n                    {intl.formatMessage({ id: \"chamber.two\" })}\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">\r\n                      {intl.formatMessage({ id: \"chamber.contact-info\" })}\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                    {\r\n                      contact2.split('*').map(contact=><>\r\n                        <a href={'tel:' + contact} >\r\n                          <FaPhoneSquare size='1.4rem'/> {contact}\r\n                        </a>\r\n                        <br />\r\n                        </>\r\n                      )\r\n                    }\r\n                    </p>\r\n                    <h5 className=\"card-title\">\r\n                      {intl.formatMessage({ id: \"chamber.location\" })}\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                      {locDetail2.replace(/\\*/g, \",\")}\r\n                    </p>\r\n                    <h5 className=\"card-title\">\r\n                      {intl.formatMessage({ id: \"chamber.time\" })}\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                      {visitTime2.replace(/\\*/g, \",\")}\r\n                    </p>\r\n                    <h5 className=\"card-title\">\r\n                      Chamber Protocol\r\n                    </h5>\r\n                    <p>\r\n                      {Protocol.replace(/\\*/g, \",\")}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Share />\r\n        <Ad title='Pakhighor- Get you pet birds' contact='01701256115' imgData={props.data.img.childImageSharp.fluid} />               \r\n        <div className=\"main\">\r\n          <div className=\"med-section\">\r\n            <h3 className=\"text-center\">{\"You may find helpful\"}</h3>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"med-card\">\r\n              <Doctors data={docs} index={true} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Jumbotron>\r\n      \r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default injectIntl(Doctor)\r\n"],"sourceRoot":""}