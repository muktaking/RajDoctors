{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/CardContext.js","webpack:///./node_modules/react-bootstrap/esm/CardImg.js","webpack:///./node_modules/react-bootstrap/esm/Card.js","webpack:///./src/templates/teledoctor/teledoctor.js","webpack:///./node_modules/react-bootstrap/esm/divWithClassName.js"],"names":["context","createContext","displayName","_excluded","CardImg","forwardRef","_ref","ref","bsPrefix","className","variant","_ref$as","as","Component","props","prefix","createElement","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","injectIntl","intl","pageContext","id","name","degree","speciality","skill","designation","institute","fee","consultationTime","closeTime","data","teledoc","img","allImg","edges","filter","_ref2","node","relativePath","includes","React","Layout","SEO","title","replace","useDefault","description","formatMessage","Container","fluid","style","width","backgroundColor","childImageSharp","borderRadius","margin","split","map","deg","Badge","pill","fontSize","href","process","GATSBY_ADD_TELEMEDICINE_CLIENT","target","rel","Share","p"],"mappings":"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","file":"component---src-templates-teledoctor-teledoctor-js-6248e8a98637e2e97b14.js","sourcesContent":["import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"variant\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    className = _ref.className,\n    variant = _ref.variant,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'img' : _ref$as,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    className = _ref.className,\n    bg = _ref.bg,\n    text = _ref.text,\n    border = _ref.border,\n    body = _ref.body,\n    children = _ref.children,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'div' : _ref$as,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import { graphql, useStaticQuery } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { injectIntl, useIntl } from \"gatsby-plugin-intl\"\nimport React from \"react\"\nimport { Badge, Card, Col, Container, Row } from \"react-bootstrap\"\n//imports components\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport Share from \"../../components/share\"\n\nexport const query = graphql`\n  query($id: String!) {\n    teledoc: telemediDoctorListsCsv(id: { eq: $id }) {\n      id\n      name\n      speciality\n      skill\n      degree\n      designation\n      institute\n      consultationTime\n      closeTime\n      fee\n      contactNumber\n      email\n      whatsapp\n    }\n\n    allImg: allFile(\n      filter: { relativePath: { regex: \"/teledoctor/.*[png|jpeg|jpg|svg]$/\" } }\n    ) {\n      edges {\n        node {\n          relativePath\n          childImageSharp {\n            # Specify the image processing specifications right in the query.\n            # Makes it trivial to update as your page's design changes.\n            fluid(maxWidth: 280) {\n              # Choose either the fragment including a small base64ed image, a traced placeholder SVG, or one without.\n              ...GatsbyImageSharpFluid_noBase64\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst TeleDoc = ({ intl, pageContext, ...props }) => {\n  // Making useIntl available in the code\n  const {\n    id,\n    name,\n    degree,\n    speciality,\n    skill,\n    designation,\n    institute,\n    fee,\n    consultationTime,\n    closeTime,\n  } = props.data.teledoc\n  const img = props.data.allImg.edges.filter(({ node }) =>\n    node.relativePath.includes(\"/\" + id + \".\")\n  )\n  return (\n    <Layout>\n      <SEO\n        title={`${\"Dr. \" + name.replace(/\\*/, \",\")} | ${speciality}`}\n        useDefault={false}\n        description={` ${skill.replace(/\\*/, \",\")} ${intl.formatMessage({\n          id: \"Specialist\",\n        })}`}\n      />\n      <hr />\n      <Container fluid className=\"p-0\">\n        {/* <div className=\"hero non-landing\">\n          <Row noGutters>\n            <Col md={6} className=\"\">\n              <div className=\"text-center\">\n                <h1 className=\"text-uppercase mt-5\">\n                  {intl.formatMessage({ id: \"adl\" })}\n                </h1>\n              </div>\n            </Col>\n          \n          </Row>\n        </div>\n        <hr className=\"w-75\" /> */}\n        <div className=\"d-flex justify-content-center\">\n          <Card style={{ width: \"300px\", backgroundColor: \"#DDE6ED\" }}>\n            <div style={{ backgroundColor: \"#FFF\" }} className=\"py-3\">\n              <Img\n                fluid={img[0].node.childImageSharp.fluid}\n                style={{ borderRadius: \"50%\", width: \"200px\", margin: \"auto\" }}\n              />\n            </div>\n\n            <Card.Body className=\"\">\n              <Card.Title className=\"text-center\">{\"Dr. \" + name}</Card.Title>\n              <Card.Text className=\"text-center\">{degree}</Card.Text>\n              <hr />\n              <Card.Text className=\"text-muted\">\n                Interested in:{\" \"}\n                {skill.split(\",\").map(deg => (\n                  <Badge\n                    pill\n                    variant=\"dark\"\n                    className=\"shadow mr-1 my-1 px-2 py-1 text-white\"\n                    style={{ fontSize: \"10px\" }}\n                  >\n                    {deg}\n                  </Badge>\n                ))}\n              </Card.Text>\n\n              <Card.Text className=\"text-center\">\n                <Badge className=\"mr-2 mb-2 text-wrap\">\n                  Available on: {consultationTime}\n                </Badge>\n                <Badge>Offday: {closeTime}</Badge>\n              </Card.Text>\n              <Card.Text className=\"text-center\">\n                Telemedicine Service Fee: <Badge className=\"\">{300 + \" tk\"}</Badge>\n              </Card.Text>\n              <Card.Text className=\"text-center\">\n                টেলিমেডিসিন সেবা পেতে <a href={process.env.GATSBY_ADD_TELEMEDICINE_CLIENT} target=\"_blank\" rel=\"noreferrer\">এই ফর্মটি</a> পূরণ করূন।\n              </Card.Text>\n            </Card.Body>\n            <Card.Footer>\n              <Share />\n            </Card.Footer>\n          </Card>\n        </div>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default injectIntl(TeleDoc)\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return /*#__PURE__*/React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});"],"sourceRoot":""}