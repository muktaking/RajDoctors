{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Jumbotron.js","webpack:///./src/templates/doctor/doctor.js"],"names":["_excluded","Jumbotron","forwardRef","_ref","ref","_classes","_ref$as","as","Component","className","fluid","bsPrefix","props","classes","createElement","defaultProps","displayName","injectIntl","_props$data$docs$node","intl","pageContext","data","doc","docCopy","docs","nodes","push","apply","_toConsumableArray","docsCopy","uid","Name","Rating","Degree","Speciality","Designation","Institute","contact1","contact2","loc1","locDetail1","locDetail2","visitTime1","visitTime2","OpenTime1","fields","Protocol","Fee","filter","e","slice","schema","replace","slug","imgSrc","React","Layout","SEO","title","formatMessage","id","useDefault","description","Avatar","height","width","img","Badge","variant","pill","FaStar","style","maxWidth","split","map","contact","Fragment","href","FaPhoneSquare","size","Share","Ad","Doctors","index"],"mappings":"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","file":"component---src-templates-doctor-doctor-js-c239c09f19b39694e4c2.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"className\", \"fluid\", \"bsPrefix\"];\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Jumbotron = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _classes;\n  var _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'div' : _ref$as,\n    className = _ref.className,\n    fluid = _ref.fluid,\n    bsPrefix = _ref.bsPrefix,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'jumbotron');\n  var classes = (_classes = {}, _classes[bsPrefix] = true, _classes[bsPrefix + \"-fluid\"] = fluid, _classes);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nJumbotron.defaultProps = defaultProps;\nJumbotron.displayName = 'Jumbotron';\nexport default Jumbotron;","import { graphql } from \"gatsby\"\r\nimport { injectIntl } from \"gatsby-plugin-intl\"\r\nimport React from \"react\"\r\nimport { Badge, Jumbotron } from \"react-bootstrap\"\r\nimport { FaPhoneSquare, FaStar } from \"react-icons/fa\"\r\nimport Ad from \"../../components/ad\"\r\nimport Avatar from \"../../components/avatar\"\r\n//importing components\r\nimport Doctors from \"../../components/doctors/doctors\"\r\nimport Flag from \"../../components/flag\"\r\nimport Layout from \"../../components/layout\"\r\nimport SEO from \"../../components/seo\"\r\nimport Share from \"../../components/share\"\r\n\r\n//uid: { eq: $uid }, lang: { eq: $lang }\r\n//$uid: String!, $lang: String!\r\nexport const query = graphql`\r\n  query($uid: String!, $lang: String!) {\r\n    doc: doctorListsCsv(uid: { eq: $uid }, lang: { eq: $lang }) {\r\n      uid\r\n      Degree\r\n      Name\r\n      Rating\r\n      Designation\r\n      Institute\r\n      Speciality\r\n      contact1\r\n      contact2\r\n      loc1\r\n      loc2\r\n      locDetail1\r\n      locDetail2\r\n      visitTime1\r\n      visitTime2\r\n      OpenTime1\r\n      fields {\r\n        slug\r\n      }\r\n      Protocol\r\n      Fee\r\n    }\r\n    docCopy: doctorListsCopyCsv(uid: { eq: $uid }, lang: { eq: $lang }) {\r\n      uid\r\n      Degree\r\n      Name\r\n      Rating\r\n      Designation\r\n      Institute\r\n      Speciality\r\n      contact1\r\n      contact2\r\n      loc1\r\n      loc2\r\n      locDetail1\r\n      locDetail2\r\n      visitTime1\r\n      visitTime2\r\n      OpenTime1\r\n      fields {\r\n        slug\r\n      }\r\n      Protocol\r\n      Fee\r\n    }\r\n    docs: allDoctorListsCsv(sort: { fields: Rating, order: DESC }) {\r\n      nodes {\r\n        id\r\n        uid\r\n        Name\r\n        Rating\r\n        Degree\r\n        Speciality\r\n        contact1\r\n        loc1\r\n        visitTime1\r\n        OpenTime1\r\n        fields {\r\n          slug\r\n        }\r\n        Protocol\r\n        lang\r\n      }\r\n    }\r\n\r\n    docsCopy: allDoctorListsCopyCsv(sort: { fields: Rating, order: DESC }) {\r\n      nodes {\r\n        id\r\n        uid\r\n        Name\r\n        Rating\r\n        Degree\r\n        Speciality\r\n        contact1\r\n        loc1\r\n        visitTime1\r\n        OpenTime1\r\n        fields {\r\n          slug\r\n        }\r\n        Protocol\r\n        lang\r\n      }\r\n    }\r\n\r\n    img: file(relativePath: { eq: \"pakhighorAd02.png\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 350, maxHeight: 210) {\r\n          # Choose either the fragment including a small base64ed image, a traced placeholder SVG, or one without.\r\n          ...GatsbyImageSharpFluid_noBase64\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n// img: file(relativePath: { eq: \"pakhighorAd02.png\" }) {\r\n//   childImageSharp {\r\n//     # Specify the image processing specifications right in the query.\r\n//     # Makes it trivial to update as your page's design changes.\r\n//     fixed(width: 350, height: 210) {\r\n//       ...GatsbyImageSharpFixed\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst Doctor = ({ intl, pageContext, ...props }) => {\r\n  // Internationalization\r\n  //const intl = useIntl()\r\n  //const locale = intl.locale !== \"en\" ? `/${intl.locale}` : \"\"\r\n  props.data.doc =  props.data.doc ?  props.data.doc :  props.data.docCopy\r\n  props.data.docs.nodes.push(...props.data.docsCopy.nodes)\r\n  const {\r\n    uid,\r\n    Name,\r\n    Rating,\r\n    Degree,\r\n    Speciality,\r\n    Designation,\r\n    Institute,\r\n    contact1,\r\n    contact2,\r\n    loc1,\r\n    locDetail1,\r\n    locDetail2,\r\n    visitTime1,\r\n    visitTime2,\r\n    OpenTime1,\r\n    fields,\r\n    Protocol,\r\n    Fee,\r\n  } = props.data.doc\r\n\r\n  const docs = props.data.docs.nodes\r\n    .filter(e => e.Speciality === props.data.doc.Speciality)\r\n    .slice(0, 6)\r\n  const schema = `\r\n{\r\n  \"@context\": \"https://schema.org/\",\r\n  \"@type\": \"Person\",\r\n  \"name\": \"${Name.replace(/\\*/, \",\")}\",\r\n  \"url\": \"${\"https://rajdoctors.com\" + `/doctor/` + fields.slug}\",\r\n  \"image\": \"${\"https://rajdoctors.com\" + pageContext.imgSrc}\",\r\n  \"jobTitle\": \"${Designation.replace(/\\*/, \",\")}\",\r\n  \"worksFor\": {\r\n    \"@type\": \"Organization\",\r\n    \"name\": \"${Institute.replace(/\\*/, \",\")}\"\r\n  },\r\n  \"telephone\": \"${\r\n    contact1.replace(/\\*/, \",\") + \", \" + contact2.replace(/\\*/, \",\")\r\n  }\"  \r\n}\r\n`\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={`${Name.replace(/\\*/, \",\")} | ${Designation.replace(\r\n          /\\*/,\r\n          \",\"\r\n        )} ${intl.formatMessage({\r\n          id: \"at\",\r\n        })} ${Institute.replace(/\\*/, \",\")}`}\r\n        useDefault={false}\r\n        description={` ${Speciality.replace(/\\*/, \",\")} ${intl.formatMessage({\r\n          id: \"Specialist\",\r\n        })}. ${intl.formatMessage({\r\n          id: \"chamber.contact-info\",\r\n        })}: ${contact1.replace(/\\*/g, \",\")}, ${\r\n          contact2 ? contact2.replace(/\\*/g, \",\") : \"\"\r\n        }, ${intl.formatMessage({\r\n          id: \"chamber.location\",\r\n        })}: ${locDetail1.replace(/\\*/g, \",\")} ${intl.formatMessage({\r\n          id: \"chamber.time\",\r\n        })}: ${visitTime1.replace(/\\*/g, \",\")} ${intl.formatMessage({\r\n          id: `arcib.${process.env.GATSBY_DISTRICT}`,\r\n        })}`}\r\n        schema={schema}\r\n      />\r\n      <Jumbotron className=\"mt-3\">\r\n        <div className=\"doctor-heading\">\r\n          <div className=\"avatar ml-5 mb-2\">\r\n            <Avatar height=\"200\" width=\"200\" img={uid} />\r\n          </div>\r\n          <h1>\r\n            {Name}\r\n            {/* <Flag uid={uid} className=\"\" /> */}\r\n          </h1>\r\n          <p>\r\n            <Badge variant=\"warning\">{Degree.replace(/\\*/, \",\")}</Badge>\r\n            <Badge pill variant=\"dark\" className=\"rating ml-3\">\r\n              <FaStar />\r\n              <span className=\"pl-2\">{Rating && Rating}</span>\r\n            </Badge>\r\n          </p>\r\n        </div>\r\n        <div className=\"doctor-body px-3 pt-1\">\r\n          <div className=\"designation\">\r\n            <h5>{intl.formatMessage({ id: \"designation\" })}</h5>\r\n            <p className=\"text-muted pl-3\">\r\n              {`${Designation.replace(/\\*/, \",\")} ${intl.formatMessage({\r\n                id: \"at\",\r\n              })} ${Institute.replace(/\\*/, \",\")}`}\r\n            </p>\r\n          </div>\r\n          <div className=\"chamber\">\r\n            <h5>{intl.formatMessage({ id: \"ci\" })}</h5>\r\n            <div className=\"pl-3 d-flex flex-wrap justify-content-start mt-2\">\r\n              <div\r\n                className=\"card bg-light mb-3 mr-3\"\r\n                style={{ maxWidth: \"22rem\" }}\r\n              >\r\n                <div className=\"card-header\">\r\n                  {intl.formatMessage({ id: \"chamber.one\" })}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    {intl.formatMessage({ id: \"chamber.contact-info\" })}\r\n                  </h5>\r\n                  <p className=\"card-text\">\r\n                    {contact1.split(\"*\").map(contact => (\r\n                      <>\r\n                        <a href={\"tel:\" + contact}>\r\n                          <FaPhoneSquare size=\"1.4rem\" /> {contact}\r\n                        </a>\r\n                        <br />\r\n                      </>\r\n                    ))}\r\n                  </p>\r\n                  <h5 className=\"card-title\">\r\n                    {intl.formatMessage({ id: \"chamber.location\" })}\r\n                  </h5>\r\n                  <p className=\"card-text\">{loc1.replace(/\\*/g, \",\")}</p>\r\n                  <p className=\"card-text\">{locDetail1.replace(/\\*/g, \",\")}</p>\r\n                  <h5 className=\"card-title\">\r\n                    {intl.formatMessage({ id: \"chamber.time\" })}\r\n                  </h5>\r\n                  <p className=\"card-text\">{visitTime1.replace(/\\*/g, \",\")}</p>\r\n                  <p className=\"card-text\">{OpenTime1.replace(/\\*/g, \",\")}</p>\r\n                  <h5 className=\"card-title\">Chamber Protocol</h5>\r\n                  <p>\r\n                    {Protocol\r\n                      ? Protocol.replace(/\\*/g, \",\")\r\n                      : \"Please phone to provided number to book a serial\"}\r\n                  </p>\r\n                  <h5 className=\"card-title\">Consultation Fee</h5>\r\n                  <p>\r\n                    {Fee\r\n                      ? Fee.replace(/\\*/g, \",\")\r\n                      : \"Please phone to provided number.\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              {locDetail2 && (\r\n                <div\r\n                  className=\"card bg-light mb-3\"\r\n                  style={{ maxWidth: \"22rem\" }}\r\n                >\r\n                  <div className=\"card-header\">\r\n                    {intl.formatMessage({ id: \"chamber.two\" })}\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">\r\n                      {intl.formatMessage({ id: \"chamber.contact-info\" })}\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                      {contact2.split(\"*\").map(contact => (\r\n                        <>\r\n                          <a href={\"tel:\" + contact}>\r\n                            <FaPhoneSquare size=\"1.4rem\" /> {contact}\r\n                          </a>\r\n                          <br />\r\n                        </>\r\n                      ))}\r\n                    </p>\r\n                    <h5 className=\"card-title\">\r\n                      {intl.formatMessage({ id: \"chamber.location\" })}\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                      {locDetail2.replace(/\\*/g, \",\")}\r\n                    </p>\r\n                    <h5 className=\"card-title\">\r\n                      {intl.formatMessage({ id: \"chamber.time\" })}\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                      {visitTime2.replace(/\\*/g, \",\")}\r\n                    </p>\r\n                    <h5 className=\"card-title\">Chamber Protocol</h5>\r\n                    <p>{Protocol.replace(/\\*/g, \",\")}</p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Share />\r\n        <br />\r\n        <Ad />\r\n        <div className=\"main\">\r\n          <div className=\"med-section\">\r\n            <h3 className=\"text-center\">{\"You may find helpful\"}</h3>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"med-card\">\r\n              <Doctors data={docs} index={true} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Jumbotron>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default injectIntl(Doctor)\r\n"],"sourceRoot":""}