{"version":3,"sources":["webpack:///./src/components/speciality.js","webpack:///./src/templates/speciality.js"],"names":["offset","Speciality","location","data","pageCount","Math","ceil","allDoctorListsCsv","nodes","length","useState","slice","doctorsList","setDoctorsList","Container","fluid","className","pathname","split","reverse","replace","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","subContainerClassName","activeClassName","React","memo","capitalizeFirstLetter","string","charAt","toUpperCase","query","top3","reduce","accumulator","currentValue","Name","contact1","title","description"],"mappings":"uOAOIA,EAAS,EAEPC,EAAa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KACxBC,EAAYC,KAAKC,KAAKH,EAAKI,kBAAkBC,MAAMC,OAAS,IADzB,EAGHC,mBACpCP,EAAKI,kBAAkBC,MAAMG,MAAMX,EAAQA,EAP/B,IAMPY,EAHkC,KAGrBC,EAHqB,KAazC,OACE,kBAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,OACzB,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,eAAd,qBACqB,IAClBd,EAASe,SAASC,MAAM,KAAKC,UAAU,GAAGC,QAAQ,OAAQ,KAAM,IAFnE,cAKA,yBAAKJ,UAAU,YACf,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAASb,KAAMS,MAGnB,yBAAKI,UAAU,iCACb,kBAAC,IAAD,CACEK,cAAe,KACfC,UAAW,KACXC,WAAY,MACZC,eAAgB,WAChBpB,UAAWA,EACXqB,qBAAsB,EACtBC,mBAAoB,EACpBC,aA7BY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB5B,EAXY,EAWH4B,EAETf,EAAeV,EAAKI,kBAAkBC,MAAMG,MAAMX,EAAQA,EAb9C,KAwCJ6B,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,eAQdC,MAAMC,KAAKhC,GClD1B,SAASiC,EAAsBC,GAC7B,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOxB,MAAM,GAGhD,IAAM2B,EAAK,aAmBZrC,EAAa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KACxBoC,EAAOpC,EAAKI,kBAAkBC,MACjCG,MAAM,EAAG,GACT6B,QACC,SAACC,EAAaC,GAAd,OACED,GACGC,EAAaC,KADL,eACuBD,EAAaE,SAASxB,QACtD,MACA,KAHS,OAKb,IAGJ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEyB,MAAK,GAAKX,EACRhC,EAASe,SAASC,MAAM,KAAKC,UAAU,GAAGC,QAAQ,OAAQ,MAE5D0B,YAAW,qCACHZ,EACAhC,EAASe,SAASC,MAAM,KAAKC,UAAU,GAAGC,QAAQ,OAAQ,MAFvD,4CAIsBmB,EAJtB,oCAMb,kBAAC,EAAD,CAAgBrC,SAAUA,EAAUC,KAAMA,MAKjC6B,cAAMC,KAAKhC","file":"component---src-templates-speciality-js-90c507b6b3b8bd35b683.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport Doctors from \"./doctors\"\r\nimport { Container } from \"react-bootstrap\"\r\n\r\n// declaring some global variable\r\nconst perPage = 6\r\nlet offset = 0\r\n\r\nconst Speciality = ({ location, data }) => {\r\n  const pageCount = Math.ceil(data.allDoctorListsCsv.nodes.length / 10)\r\n  //const [currentPage, setCurrentPage] = useState(0)\r\n  const [doctorsList, setDoctorsList] = useState(\r\n    data.allDoctorListsCsv.nodes.slice(offset, offset + perPage)\r\n  )\r\n\r\n  const onHandleClick = ({ selected }) => {\r\n    offset = selected * perPage\r\n    //setCurrentPage(selected)\r\n    setDoctorsList(data.allDoctorListsCsv.nodes.slice(offset, offset + perPage))\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"p-0\">\r\n      <div className=\"main\">\r\n        <div className=\"med-section\">\r\n          <h3 className=\"text-center\">\r\n            List Of Doctors in{\" \"}\r\n            {location.pathname.split(\"/\").reverse()[0].replace(/%20/g, \" \")}{\" \"}\r\n            Speciality\r\n          </h3>\r\n          <div className=\"divider\"></div>\r\n          <div className=\"med-card\">\r\n            <Doctors data={doctorsList} />\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <ReactPaginate\r\n            previousLabel={\"<<\"}\r\n            nextLabel={\">>\"}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break-me\"}\r\n            pageCount={pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={onHandleClick}\r\n            containerClassName={\"pagination\"}\r\n            subContainerClassName={\"pages pagination\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default React.memo(Speciality)\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport SpecialityComp from \"../components//speciality\"\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n\r\nexport const query = graphql`\r\n  query($Speciality: String!) {\r\n    allDoctorListsCsv(filter: { Speciality: { eq: $Speciality } }) {\r\n      nodes {\r\n        Degree\r\n        Name\r\n        contact1\r\n        loc1\r\n        visitTime1\r\n        id\r\n        uid\r\n        fields {\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Speciality = ({ location, data }) => {\r\n  const top3 = data.allDoctorListsCsv.nodes\r\n    .slice(0, 3)\r\n    .reduce(\r\n      (accumulator, currentValue) =>\r\n        accumulator +\r\n        `${currentValue.Name}, Contact: ${currentValue.contact1.replace(\r\n          /\\*/g,\r\n          \",\"\r\n        )}; `,\r\n      \"\"\r\n    )\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={`${capitalizeFirstLetter(\r\n          location.pathname.split(\"/\").reverse()[0].replace(/%20/g, \" \")\r\n        )}`}\r\n        description={`List Of Doctors in\r\n              ${capitalizeFirstLetter(\r\n                location.pathname.split(\"/\").reverse()[0].replace(/%20/g, \" \")\r\n              )}\r\n              Speciality. Top Doctors: ${top3} at rajshahi city in bangladesh`}\r\n      />\r\n      <SpecialityComp location={location} data={data} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default React.memo(Speciality)\r\n"],"sourceRoot":""}