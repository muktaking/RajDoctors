{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Container.js","webpack:///./src/templates/teledoctor/teledoctor.js"],"names":["_excluded","Container","forwardRef","_ref","ref","bsPrefix","fluid","_ref$as","as","Component","className","props","prefix","suffix","createElement","displayName","defaultProps","injectIntl","intl","pageContext","id","name","degree","speciality","skill","designation","institute","fee","consultationTime","closeTime","data","teledoc","img","allImg","edges","filter","_ref2","node","relativePath","includes","React","Layout","SEO","title","replace","useDefault","description","formatMessage","Card","style","width","backgroundColor","Img","childImageSharp","borderRadius","margin","Body","Title","Text","split","map","deg","Badge","pill","variant","fontSize","href","process","target","rel","Footer","Share"],"mappings":"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","file":"component---src-templates-teledoctor-teledoctor-js-32e3cbb86f121a0922ea.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"fluid\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    fluid = _ref.fluid,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'div' : _ref$as,\n    className = _ref.className,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import { graphql, useStaticQuery } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport { injectIntl, useIntl } from \"gatsby-plugin-intl\"\r\nimport React from \"react\"\r\nimport { Badge, Card, Col, Container, Row } from \"react-bootstrap\"\r\n//imports components\r\nimport Layout from \"../../components/layout\"\r\nimport SEO from \"../../components/seo\"\r\nimport Share from \"../../components/share\"\r\n\r\nexport const query = graphql`\r\n  query($id: String!) {\r\n    teledoc: telemediDoctorListsCsv(id: { eq: $id }) {\r\n      id\r\n      name\r\n      speciality\r\n      skill\r\n      degree\r\n      designation\r\n      institute\r\n      consultationTime\r\n      closeTime\r\n      fee\r\n      contactNumber\r\n      email\r\n      whatsapp\r\n    }\r\n\r\n    allImg: allFile(\r\n      filter: { relativePath: { regex: \"/teledoctor/.*[png|jpeg|jpg|svg]$/\" } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          relativePath\r\n          childImageSharp {\r\n            # Specify the image processing specifications right in the query.\r\n            # Makes it trivial to update as your page's design changes.\r\n            fluid(maxWidth: 280) {\r\n              # Choose either the fragment including a small base64ed image, a traced placeholder SVG, or one without.\r\n              ...GatsbyImageSharpFluid_noBase64\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst TeleDoc = ({ intl, pageContext, ...props }) => {\r\n  // Making useIntl available in the code\r\n  const {\r\n    id,\r\n    name,\r\n    degree,\r\n    speciality,\r\n    skill,\r\n    designation,\r\n    institute,\r\n    fee,\r\n    consultationTime,\r\n    closeTime,\r\n  } = props.data.teledoc\r\n  const img = props.data.allImg.edges.filter(({ node }) =>\r\n    node.relativePath.includes(\"/\" + id + \".\")\r\n  )\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={`${\"Dr. \" + name.replace(/\\*/, \",\")} | ${speciality}`}\r\n        useDefault={false}\r\n        description={` ${skill.replace(/\\*/, \",\")} ${intl.formatMessage({\r\n          id: \"Specialist\",\r\n        })}`}\r\n      />\r\n      <hr />\r\n      <Container fluid className=\"p-0\">\r\n        {/* <div className=\"hero non-landing\">\r\n          <Row noGutters>\r\n            <Col md={6} className=\"\">\r\n              <div className=\"text-center\">\r\n                <h1 className=\"text-uppercase mt-5\">\r\n                  {intl.formatMessage({ id: \"adl\" })}\r\n                </h1>\r\n              </div>\r\n            </Col>\r\n          \r\n          </Row>\r\n        </div>\r\n        <hr className=\"w-75\" /> */}\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Card style={{ width: \"300px\", backgroundColor: \"#DDE6ED\" }}>\r\n            <div style={{ backgroundColor: \"#FFF\" }} className=\"py-3\">\r\n              <Img\r\n                fluid={img[0].node.childImageSharp.fluid}\r\n                style={{ borderRadius: \"50%\", width: \"200px\", margin: \"auto\" }}\r\n              />\r\n            </div>\r\n\r\n            <Card.Body className=\"\">\r\n              <Card.Title className=\"text-center\">{\"Dr. \" + name}</Card.Title>\r\n              <Card.Text className=\"text-center\">{degree}</Card.Text>\r\n              <hr />\r\n              <Card.Text className=\"text-muted\">\r\n                Interested in:{\" \"}\r\n                {skill.split(\",\").map(deg => (\r\n                  <Badge\r\n                    pill\r\n                    variant=\"dark\"\r\n                    className=\"shadow mr-1 my-1 px-2 py-1 text-white\"\r\n                    style={{ fontSize: \"10px\" }}\r\n                  >\r\n                    {deg}\r\n                  </Badge>\r\n                ))}\r\n              </Card.Text>\r\n\r\n              <Card.Text className=\"text-center\">\r\n                <Badge className=\"mr-2 mb-2 text-wrap\">\r\n                  Available on: {consultationTime}\r\n                </Badge>\r\n                <Badge>Offday: {closeTime}</Badge>\r\n              </Card.Text>\r\n              <Card.Text className=\"text-center\">\r\n                Telemedicine Service Fee: <Badge className=\"\">{300 + \" tk\"}</Badge>\r\n              </Card.Text>\r\n              <Card.Text className=\"text-center\">\r\n                টেলিমেডিসিন সেবা পেতে <a href={process.env.GATSBY_ADD_TELEMEDICINE_CLIENT} target=\"_blank\" rel=\"noreferrer\">এই ফর্মটি</a> পূরণ করূন।\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Share />\r\n            </Card.Footer>\r\n          </Card>\r\n        </div>\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default injectIntl(TeleDoc)\r\n"],"sourceRoot":""}