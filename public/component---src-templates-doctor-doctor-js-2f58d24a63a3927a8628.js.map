{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Jumbotron.js","webpack:///./src/templates/doctor/doctor.js"],"names":["Jumbotron","forwardRef","_ref","ref","_classes","_ref$as","as","Component","className","fluid","bsPrefix","props","classes","createElement","defaultProps","displayName","query","injectIntl","intl","data","doctorListsCsv","uid","Name","Degree","Speciality","Designation","Institute","contact1","contact2","locDetail1","locDetail2","visitTime1","visitTime2","title","description","replace","height","width","img","Badge","variant","formatMessage","id","style","maxWidth"],"mappings":"2NAQIA,EAAY,IAAMC,YAAW,SAAUC,EAAMC,GAC/C,IAAIC,EAEAC,EAAUH,EAAKI,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCG,EAAYN,EAAKM,UACjBC,EAAQP,EAAKO,MACbC,EAAWR,EAAKQ,SAChBC,EAAQ,YAA8BT,EAAM,CAAC,KAAM,YAAa,QAAS,aAGzEU,IAAWR,EAAW,IAD1BM,EAAW,YAAmBA,EAAU,eACW,EAAMN,EAASM,EAAW,UAAYD,EAAOL,GAChG,OAAoB,IAAMS,cAAcN,EAAW,YAAS,CAC1DJ,IAAKA,GACJQ,EAAO,CACRH,UAAW,IAAWA,EAAWI,SAGrCZ,EAAUc,aArBS,CACjBL,OAAO,GAqBTT,EAAUe,YAAc,YACT,Q,oFCdFC,EAAK,aAsJHC,gCAjIA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAqB,0BAkB3BC,KAAKC,eAZbC,EANmC,EAMnCA,IACAC,EAPmC,EAOnCA,KACAC,EARmC,EAQnCA,OACAC,EATmC,EASnCA,WACAC,EAVmC,EAUnCA,YACAC,EAXmC,EAWnCA,UACAC,EAZmC,EAYnCA,SACAC,EAbmC,EAanCA,SACAC,EAdmC,EAcnCA,WACAC,EAfmC,EAenCA,WACAC,EAhBmC,EAgBnCA,WACAC,EAjBmC,EAiBnCA,WAGF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAUX,EAAL,MAAeG,EAAf,OAAiCC,EACtCQ,YAAW,IAAMV,EAAN,qCAAqDG,EAASQ,QACvE,MACA,KAFS,MAITP,EAAWA,EAASO,QAAQ,MAAO,KAAO,IAJjC,uBAKYN,EAAWM,QAChC,MACA,KAPS,mBAQSJ,EAAWI,QAC7B,MACA,KAVS,oCAab,kBAAC,EAAD,KACE,yBAAK3B,UAAU,kBACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAQ4B,OAAO,MAAMC,MAAM,MAAMC,IAAKjB,KAExC,4BACGC,EACD,kBAAC,IAAD,CAAMD,IAAKA,EAAKb,UAAU,MAE5B,2BACE,kBAAC+B,EAAA,EAAD,CAAOC,QAAQ,WAAWjB,KAG9B,yBAAKf,UAAU,yBACb,yBAAKA,UAAU,eACb,4BAAKU,EAAKuB,cAAc,CAAEC,GAAI,iBAC9B,uBAAGlC,UAAU,mBACPiB,EADN,IACqBP,EAAKuB,cAAc,CACpCC,GAAI,OAFR,IAGQhB,IAGV,yBAAKlB,UAAU,WACb,4BAAKU,EAAKuB,cAAc,CAAEC,GAAI,QAC9B,yBAAKlC,UAAU,oDACb,yBACEA,UAAU,0BACVmC,MAAO,CAAEC,SAAU,UAEnB,yBAAKpC,UAAU,eACZU,EAAKuB,cAAc,CAAEC,GAAI,iBAE5B,yBAAKlC,UAAU,aACb,wBAAIA,UAAU,cACXU,EAAKuB,cAAc,CAAEC,GAAI,0BAE5B,uBAAGlC,UAAU,aACX,kBAAC+B,EAAA,EAAD,CAAOC,QAAQ,WACZb,EAASQ,QAAQ,MAAO,OAG7B,wBAAI3B,UAAU,cACXU,EAAKuB,cAAc,CAAEC,GAAI,sBAE5B,uBAAGlC,UAAU,aAAaqB,EAAWM,QAAQ,MAAO,MACpD,wBAAI3B,UAAU,cACXU,EAAKuB,cAAc,CAAEC,GAAI,kBAE5B,uBAAGlC,UAAU,aAAauB,EAAWI,QAAQ,MAAO,QAGvDL,GACC,yBACEtB,UAAU,qBACVmC,MAAO,CAAEC,SAAU,UAEnB,yBAAKpC,UAAU,eACZU,EAAKuB,cAAc,CAAEC,GAAI,iBAE5B,yBAAKlC,UAAU,aACb,wBAAIA,UAAU,cACXU,EAAKuB,cAAc,CAAEC,GAAI,0BAE5B,uBAAGlC,UAAU,aACX,kBAAC+B,EAAA,EAAD,CAAOC,QAAQ,WACZZ,EAASO,QAAQ,MAAO,OAG7B,wBAAI3B,UAAU,cACXU,EAAKuB,cAAc,CAAEC,GAAI,sBAE5B,uBAAGlC,UAAU,aACVsB,EAAWK,QAAQ,MAAO,MAE7B,wBAAI3B,UAAU,cACXU,EAAKuB,cAAc,CAAEC,GAAI,kBAE5B,uBAAGlC,UAAU,aACVwB,EAAWG,QAAQ,MAAO,WAQzC,kBAAC,IAAD","file":"component---src-templates-doctor-doctor-js-2f58d24a63a3927a8628.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Jumbotron = React.forwardRef(function (_ref, ref) {\n  var _classes;\n\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"fluid\", \"bsPrefix\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'jumbotron');\n  var classes = (_classes = {}, _classes[bsPrefix] = true, _classes[bsPrefix + \"-fluid\"] = fluid, _classes);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nJumbotron.defaultProps = defaultProps;\nJumbotron.displayName = 'Jumbotron';\nexport default Jumbotron;","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { Badge, Jumbotron } from \"react-bootstrap\"\r\n\r\nimport { injectIntl, Link, FormattedMessage } from \"gatsby-plugin-intl\"\r\n//importing components\r\nimport Layout from \"../../components/layout\"\r\nimport SEO from \"../../components/seo\"\r\nimport Share from \"../../components/share\"\r\nimport Flag from \"../../components/flag\"\r\nimport Avatar from \"../../components/avatar\"\r\n\r\n//uid: { eq: $uid }, lang: { eq: $lang }\r\n//$uid: String!, $lang: String!\r\nexport const query = graphql`\r\n  query($uid: String!, $lang: String!) {\r\n    doctorListsCsv(uid: { eq: $uid }, lang: { eq: $lang }) {\r\n      uid\r\n      Degree\r\n      Name\r\n      Designation\r\n      Institute\r\n      Speciality\r\n      contact1\r\n      contact2\r\n      loc1\r\n      loc2\r\n      locDetail1\r\n      locDetail2\r\n      visitTime1\r\n      visitTime2\r\n    }\r\n  }\r\n`\r\n\r\nconst Doctor = ({ intl, ...props }) => {\r\n  // Internationalization\r\n  //const intl = useIntl()\r\n  //const locale = intl.locale !== \"en\" ? `/${intl.locale}` : \"\"\r\n\r\n  const {\r\n    uid,\r\n    Name,\r\n    Degree,\r\n    Speciality,\r\n    Designation,\r\n    Institute,\r\n    contact1,\r\n    contact2,\r\n    locDetail1,\r\n    locDetail2,\r\n    visitTime1,\r\n    visitTime2,\r\n  } = props.data.doctorListsCsv\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={`${Name} | ${Designation} at ${Institute}`}\r\n        description={` ${Speciality} Specialist. Contact information: ${contact1.replace(\r\n          /\\*/g,\r\n          \",\"\r\n        )}, ${\r\n          contact2 ? contact2.replace(/\\*/g, \",\") : \"\"\r\n        }, Chamber location: ${locDetail1.replace(\r\n          /\\*/g,\r\n          \",\"\r\n        )} Visiting time: ${visitTime1.replace(\r\n          /\\*/g,\r\n          \",\"\r\n        )} at rajshahi city in bangladesh`}\r\n      />\r\n      <Jumbotron>\r\n        <div className=\"doctor-heading\">\r\n          <div className=\"avatar ml-5 mb-2\">\r\n            <Avatar height=\"200\" width=\"200\" img={uid} />\r\n          </div>\r\n          <h1>\r\n            {Name}\r\n            <Flag uid={uid} className=\"\" />\r\n          </h1>\r\n          <p>\r\n            <Badge variant=\"warning\">{Degree}</Badge>\r\n          </p>\r\n        </div>\r\n        <div className=\"doctor-body px-3 pt-1\">\r\n          <div className=\"designation\">\r\n            <h5>{intl.formatMessage({ id: \"designation\" })}</h5>\r\n            <p className=\"text-muted pl-3\">\r\n              {`${Designation} ${intl.formatMessage({\r\n                id: \"at\",\r\n              })} ${Institute}`}\r\n            </p>\r\n          </div>\r\n          <div className=\"chamber\">\r\n            <h5>{intl.formatMessage({ id: \"ci\" })}</h5>\r\n            <div className=\"pl-3 d-flex flex-wrap justify-content-start mt-2\">\r\n              <div\r\n                className=\"card bg-light mb-3 mr-3\"\r\n                style={{ maxWidth: \"22rem\" }}\r\n              >\r\n                <div className=\"card-header\">\r\n                  {intl.formatMessage({ id: \"chamber.one\" })}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    {intl.formatMessage({ id: \"chamber.contact-info\" })}\r\n                  </h5>\r\n                  <p className=\"card-text\">\r\n                    <Badge variant=\"warning\">\r\n                      {contact1.replace(/\\*/g, \",\")}\r\n                    </Badge>\r\n                  </p>\r\n                  <h5 className=\"card-title\">\r\n                    {intl.formatMessage({ id: \"chamber.location\" })}\r\n                  </h5>\r\n                  <p className=\"card-text\">{locDetail1.replace(/\\*/g, \",\")}</p>\r\n                  <h5 className=\"card-title\">\r\n                    {intl.formatMessage({ id: \"chamber.time\" })}\r\n                  </h5>\r\n                  <p className=\"card-text\">{visitTime1.replace(/\\*/g, \",\")}</p>\r\n                </div>\r\n              </div>\r\n              {locDetail2 && (\r\n                <div\r\n                  className=\"card bg-light mb-3\"\r\n                  style={{ maxWidth: \"22rem\" }}\r\n                >\r\n                  <div className=\"card-header\">\r\n                    {intl.formatMessage({ id: \"chamber.two\" })}\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">\r\n                      {intl.formatMessage({ id: \"chamber.contact-info\" })}\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                      <Badge variant=\"warning\">\r\n                        {contact2.replace(/\\*/g, \",\")}\r\n                      </Badge>\r\n                    </p>\r\n                    <h5 className=\"card-title\">\r\n                      {intl.formatMessage({ id: \"chamber.location\" })}\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                      {locDetail2.replace(/\\*/g, \",\")}\r\n                    </p>\r\n                    <h5 className=\"card-title\">\r\n                      {intl.formatMessage({ id: \"chamber.time\" })}\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                      {visitTime2.replace(/\\*/g, \",\")}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Share />\r\n      </Jumbotron>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default injectIntl(Doctor)\r\n"],"sourceRoot":""}