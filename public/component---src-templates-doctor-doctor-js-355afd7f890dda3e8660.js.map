{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Jumbotron.js","webpack:///./src/templates/doctor/doctor.js"],"names":["_excluded","Jumbotron","forwardRef","_ref","ref","_classes","_ref$as","as","Component","className","fluid","bsPrefix","props","classes","createElement","defaultProps","displayName","injectIntl","intl","pageContext","data","doc","uid","Name","Rating","Degree","Speciality","Designation","Institute","contact1","contact2","locDetail1","locDetail2","visitTime1","visitTime2","fields","Protocol","Fee","docs","nodes","filter","e","slice","schema","replace","slug","imgSrc","title","formatMessage","id","useDefault","description","height","width","img","Badge","variant","pill","style","maxWidth","split","map","contact","href","size","index"],"mappings":"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","file":"component---src-templates-doctor-doctor-js-355afd7f890dda3e8660.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"className\", \"fluid\", \"bsPrefix\"];\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Jumbotron = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _classes;\n\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'jumbotron');\n  var classes = (_classes = {}, _classes[bsPrefix] = true, _classes[bsPrefix + \"-fluid\"] = fluid, _classes);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nJumbotron.defaultProps = defaultProps;\nJumbotron.displayName = 'Jumbotron';\nexport default Jumbotron;","import { graphql } from \"gatsby\"\nimport { injectIntl } from \"gatsby-plugin-intl\"\nimport React from \"react\"\nimport { Badge, Jumbotron } from \"react-bootstrap\"\nimport { FaPhoneSquare, FaStar } from \"react-icons/fa\"\nimport Ad from \"../../components/ad\"\nimport Avatar from \"../../components/avatar\"\n//importing components\nimport Doctors from \"../../components/doctors/doctors\"\nimport Flag from \"../../components/flag\"\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport Share from \"../../components/share\"\n\n//uid: { eq: $uid }, lang: { eq: $lang }\n//$uid: String!, $lang: String!\nexport const query = graphql`\n  query($uid: String!, $lang: String!) {\n    doc: doctorListsCsv(uid: { eq: $uid }, lang: { eq: $lang }) {\n      uid\n      Degree\n      Name\n      Rating\n      Designation\n      Institute\n      Speciality\n      contact1\n      contact2\n      loc1\n      loc2\n      locDetail1\n      locDetail2\n      visitTime1\n      visitTime2\n      fields {\n        slug\n      }\n      Protocol\n      Fee\n    }\n    docs: allDoctorListsCsv(sort: { fields: Rating, order: DESC }) {\n      nodes {\n        id\n        uid\n        Name\n        Rating\n        Degree\n        Speciality\n        contact1\n        loc1\n        visitTime1\n        fields {\n          slug\n        }\n        Protocol\n        lang\n      }\n    }\n\n    img: file(relativePath: { eq: \"pakhighorAd02.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 350, maxHeight: 210) {\n          # Choose either the fragment including a small base64ed image, a traced placeholder SVG, or one without.\n          ...GatsbyImageSharpFluid_noBase64\n        }\n      }\n    }\n  }\n`\n// img: file(relativePath: { eq: \"pakhighorAd02.png\" }) {\n//   childImageSharp {\n//     # Specify the image processing specifications right in the query.\n//     # Makes it trivial to update as your page's design changes.\n//     fixed(width: 350, height: 210) {\n//       ...GatsbyImageSharpFixed\n//     }\n//   }\n// }\n\nconst Doctor = ({ intl, pageContext, ...props }) => {\n  // Internationalization\n  //const intl = useIntl()\n  //const locale = intl.locale !== \"en\" ? `/${intl.locale}` : \"\"\n\n  const {\n    uid,\n    Name,\n    Rating,\n    Degree,\n    Speciality,\n    Designation,\n    Institute,\n    contact1,\n    contact2,\n    locDetail1,\n    locDetail2,\n    visitTime1,\n    visitTime2,\n    fields,\n    Protocol,\n    Fee,\n  } = props.data.doc\n\n  const docs = props.data.docs.nodes\n    .filter(e => e.Speciality === props.data.doc.Speciality)\n    .slice(0, 6)\n  const schema = `\n{\n  \"@context\": \"https://schema.org/\",\n  \"@type\": \"Person\",\n  \"name\": \"${Name.replace(/\\*/, \",\")}\",\n  \"url\": \"${\"https://rajdoctors.com\" + `/doctor/` + fields.slug}\",\n  \"image\": \"${\"https://rajdoctors.com\" + pageContext.imgSrc}\",\n  \"jobTitle\": \"${Designation.replace(/\\*/, \",\")}\",\n  \"worksFor\": {\n    \"@type\": \"Organization\",\n    \"name\": \"${Institute.replace(/\\*/, \",\")}\"\n  },\n  \"telephone\": \"${\n    contact1.replace(/\\*/, \",\") + \", \" + contact2.replace(/\\*/, \",\")\n  }\"  \n}\n`\n  return (\n    <Layout>\n      <SEO\n        title={`${Name.replace(/\\*/, \",\")} | ${Designation.replace(\n          /\\*/,\n          \",\"\n        )} ${intl.formatMessage({\n          id: \"at\",\n        })} ${Institute.replace(/\\*/, \",\")}`}\n        useDefault={false}\n        description={` ${Speciality.replace(/\\*/, \",\")} ${intl.formatMessage({\n          id: \"Specialist\",\n        })}. ${intl.formatMessage({\n          id: \"chamber.contact-info\",\n        })}: ${contact1.replace(/\\*/g, \",\")}, ${\n          contact2 ? contact2.replace(/\\*/g, \",\") : \"\"\n        }, ${intl.formatMessage({\n          id: \"chamber.location\",\n        })}: ${locDetail1.replace(/\\*/g, \",\")} ${intl.formatMessage({\n          id: \"chamber.time\",\n        })}: ${visitTime1.replace(/\\*/g, \",\")} ${intl.formatMessage({\n          id: `arcib.${process.env.GATSBY_DISTRICT}`,\n        })}`}\n        schema={schema}\n      />\n      <Jumbotron className=\"mt-3\">\n        <div className=\"doctor-heading\">\n          <div className=\"avatar ml-5 mb-2\">\n            <Avatar height=\"200\" width=\"200\" img={uid} />\n          </div>\n          <h1>\n            {Name}\n            {/* <Flag uid={uid} className=\"\" /> */}\n          </h1>\n          <p>\n            <Badge variant=\"warning\">{Degree.replace(/\\*/, \",\")}</Badge>\n            <Badge pill variant=\"dark\" className=\"rating ml-3\">\n              <FaStar />\n              <span className=\"pl-2\">{Rating && Rating}</span>\n            </Badge>\n          </p>\n        </div>\n        <div className=\"doctor-body px-3 pt-1\">\n          <div className=\"designation\">\n            <h5>{intl.formatMessage({ id: \"designation\" })}</h5>\n            <p className=\"text-muted pl-3\">\n              {`${Designation.replace(/\\*/, \",\")} ${intl.formatMessage({\n                id: \"at\",\n              })} ${Institute.replace(/\\*/, \",\")}`}\n            </p>\n          </div>\n          <div className=\"chamber\">\n            <h5>{intl.formatMessage({ id: \"ci\" })}</h5>\n            <div className=\"pl-3 d-flex flex-wrap justify-content-start mt-2\">\n              <div\n                className=\"card bg-light mb-3 mr-3\"\n                style={{ maxWidth: \"22rem\" }}\n              >\n                <div className=\"card-header\">\n                  {intl.formatMessage({ id: \"chamber.one\" })}\n                </div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    {intl.formatMessage({ id: \"chamber.contact-info\" })}\n                  </h5>\n                  <p className=\"card-text\">\n                    {contact1.split(\"*\").map(contact => (\n                      <>\n                        <a href={\"tel:\" + contact}>\n                          <FaPhoneSquare size=\"1.4rem\" /> {contact}\n                        </a>\n                        <br />\n                      </>\n                    ))}\n                  </p>\n                  <h5 className=\"card-title\">\n                    {intl.formatMessage({ id: \"chamber.location\" })}\n                  </h5>\n                  <p className=\"card-text\">{locDetail1.replace(/\\*/g, \",\")}</p>\n                  <h5 className=\"card-title\">\n                    {intl.formatMessage({ id: \"chamber.time\" })}\n                  </h5>\n                  <p className=\"card-text\">{visitTime1.replace(/\\*/g, \",\")}</p>\n                  <h5 className=\"card-title\">Chamber Protocol</h5>\n                  <p>\n                    {Protocol\n                      ? Protocol.replace(/\\*/g, \",\")\n                      : \"Please phone to provided number to book a serial\"}\n                  </p>\n                  <h5 className=\"card-title\">Consultation Fee</h5>\n                  <p>\n                    {Fee\n                      ? Fee.replace(/\\*/g, \",\")\n                      : \"Please phone to provided number.\"}\n                  </p>\n                </div>\n              </div>\n              {locDetail2 && (\n                <div\n                  className=\"card bg-light mb-3\"\n                  style={{ maxWidth: \"22rem\" }}\n                >\n                  <div className=\"card-header\">\n                    {intl.formatMessage({ id: \"chamber.two\" })}\n                  </div>\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">\n                      {intl.formatMessage({ id: \"chamber.contact-info\" })}\n                    </h5>\n                    <p className=\"card-text\">\n                      {contact2.split(\"*\").map(contact => (\n                        <>\n                          <a href={\"tel:\" + contact}>\n                            <FaPhoneSquare size=\"1.4rem\" /> {contact}\n                          </a>\n                          <br />\n                        </>\n                      ))}\n                    </p>\n                    <h5 className=\"card-title\">\n                      {intl.formatMessage({ id: \"chamber.location\" })}\n                    </h5>\n                    <p className=\"card-text\">\n                      {locDetail2.replace(/\\*/g, \",\")}\n                    </p>\n                    <h5 className=\"card-title\">\n                      {intl.formatMessage({ id: \"chamber.time\" })}\n                    </h5>\n                    <p className=\"card-text\">\n                      {visitTime2.replace(/\\*/g, \",\")}\n                    </p>\n                    <h5 className=\"card-title\">Chamber Protocol</h5>\n                    <p>{Protocol.replace(/\\*/g, \",\")}</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <Share />\n        <br />\n        <Ad />\n        <div className=\"main\">\n          <div className=\"med-section\">\n            <h3 className=\"text-center\">{\"You may find helpful\"}</h3>\n            <div className=\"divider\"></div>\n            <div className=\"med-card\">\n              <Doctors data={docs} index={true} />\n            </div>\n          </div>\n        </div>\n      </Jumbotron>\n    </Layout>\n  )\n}\n\nexport default injectIntl(Doctor)\n"],"sourceRoot":""}